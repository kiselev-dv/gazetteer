<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>me.osm</groupId>
		<artifactId>libs</artifactId>
		<version>1.1.0</version>
	</parent>

	<groupId>me.osm.libs</groupId>
	<artifactId>external-sorting</artifactId>
	<version>1.1.0</version>

	<packaging>jar</packaging>
	<name>ExternalSorting</name>
	<url>http://code.google.com/p/externalsortinginjava/</url>

	<description>
Sometimes, you want to sort large file without first loading them into memory.
		The solution is to use External Sorting.
		You divide the files into small blocks, sort each block in RAM, and then merge the result.

Many database engines and the Unix sort command support external sorting.
		But what if you want to avoid a database? Or what if you want to sort in a non-lexicographic order?
		Or maybe you just want a simple external sorting example?

When we could not find such a simple program, we wrote one.
	</description>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-deploy-plugin</artifactId>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>default-deploy</id>-->
						<!--<phase>deploy</phase>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
